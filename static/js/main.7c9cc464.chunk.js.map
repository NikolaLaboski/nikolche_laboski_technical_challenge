{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","products","setProducts","value","setValue","sortType","setSortType","sortTypeA","setSortTypeA","fetchProducts","a","fetch","reponse","json","newProducts","useEffect","type","sortProperty","title","price","sorted","sort","b","sortArray","type1","localeCompare","sortArray1","picture","description","className","icon","faDolly","size","faBars","onChange","e","target","faPlusCircle","map","item","index","onClick","id","src","alt","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAsHeA,MA7Gf,WAEE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,SAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,mBAAS,SAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,uCAAG,8BAAAC,EAAA,sEACEC,MAXd,0EAUY,cACdC,EADc,gBAEMA,EAAQC,OAFd,OAEdC,EAFc,OAGpBZ,EAAYY,GACZd,GAAW,GAJS,2CAAH,qDAoCnB,GA9BAe,qBAAU,WACRN,MACC,IAEHM,qBAAU,YACU,SAAAC,GAChB,IAIMC,EAJQ,CACZC,MAAO,QACPC,MAAO,SAEkBH,GACrBI,EAAS,YAAInB,GAAUoB,MAAK,SAACX,EAAGY,GAAJ,OAAUA,EAAEL,GAAgBP,EAAEO,MAChEf,EAAYkB,GAGdG,CAAUlB,KACT,CAACA,IAEJU,qBAAU,YACW,SAAAS,GAGjB,IAAMJ,EAAS,YAAInB,GAAUoB,MAAK,SAACX,EAAGY,GAAJ,OAAUZ,EAAEQ,MAAMO,cAAcH,EAAEJ,UACpEhB,EAAYkB,GAGdM,KACC,CAACnB,IAGAR,EACF,OACE,kCACE,8CAKN,MAA+CE,EAASE,GAAhDe,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOQ,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,YAC/B,OAEE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAwB,cAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAO,SAC/D,qBAAKH,UAAU,OAAf,SACE,qBAAKA,UAAU,SAAf,SACA,cAAC,IAAD,CAAiBC,KAAMG,IAAQD,KAAO,WAGxC,sBAAKH,UAAU,QAAf,UACE,yBAAQK,SAAU,SAACC,GAAD,OAAO7B,EAAY6B,EAAEC,OAAOjC,QAAQ0B,UAAU,QAAhE,UACE,wBAAQ1B,MAAM,QAAd,uBACA,wBAAQA,MAAM,QAAd,0BAEF,yBAAQ+B,SAAU,SAACC,GAAD,OAAO3B,EAAa2B,EAAEC,OAAOjC,QAAQ0B,UAAU,QAAjE,UACE,wBAAQ1B,MAAM,QAAd,uBACA,wBAAQA,MAAM,QAAd,6BAGJ,qBAAK0B,UAAU,UAAf,SACE,qBAAIA,UAAU,YAAd,UAA0B,cAAC,IAAD,CAAiBC,KAAMO,MAAjD,oBAIF,qBAAKR,UAAU,OAAf,SAEK5B,EAASqC,KAAI,SAACC,EAAMC,GACnB,OACE,yBAEEC,QAAS,kBAAMrC,EAASoC,IACxBX,UAAS,cAASW,IAAUrC,GAAS,cAHvC,UAKE,+CAAgBoC,EAAKrB,SACrB,+CAAgBqB,EAAKpB,WALhBoB,EAAKG,SAcpB,sBAAKb,UAAU,UAAf,UACI,6BAAKX,IACL,6BAAKC,IACL,qBAAKwB,IAAKhB,EAASiB,IAAK,MAAOC,MAAM,MAAMC,OAAO,QAClD,4BAAIlB,WCxGdmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c9cc464.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { faDolly } from '@fortawesome/free-solid-svg-icons'\n\nconst url = 'https://my-json-server.typicode.com/drakulovski/dbplaceholder/products';\n\nfunction App() {  \n\n  const [loading, setLoading] = useState(true)\n  const [products, setProducts] = useState([]);\n  const [value, setValue] = useState(0);\n  const [sortType, setSortType] = useState('price');\n  const [sortTypeA, setSortTypeA] = useState('title');\n\n  const fetchProducts = async () => {\n    const reponse = await fetch(url);\n    const newProducts = await reponse.json();\n    setProducts(newProducts);\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchProducts()\n  }, []);\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        title: 'title',\n        price: 'price',\n      };\n      const sortProperty = types[type];\n      const sorted = [...products].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setProducts(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]); \n\n  useEffect(() => {\n    const sortArray1 = type1 => {\n      \n     \n      const sorted = [...products].sort((a, b) => a.title.localeCompare(b.title));\n      setProducts(sorted);\n    };\n\n    sortArray1(sortTypeA);\n  }, [sortTypeA]); \n\n  \n  if (loading) {\n    return (\n      <section>\n        <h1>Hello guys</h1>\n      </section>\n    )\n  }\n\n  const { title, price, picture, description } = products[value]\n  return (\n  \n    <div className=\"container\">\n      <div className=\"header\"><FontAwesomeIcon icon={faDolly} size = '2x' /></div>\n      <div className=\"bars\">\n        <div className=\"bars-a\">\n        <FontAwesomeIcon icon={faBars} size = '2x'/>\n        </div>\n      </div>\n      <div className=\"input\">\n        <select onChange={(e) => setSortType(e.target.value)} className=\"sort1\">\n          <option value=\"title\">PriceSort</option>\n          <option value=\"price\">TitleSort</option>\n        </select>\n        <select onChange={(e) => setSortTypeA(e.target.value)} className=\"sort1\">\n          <option value=\"title\">TitleSort</option>\n          <option value=\"price\">PriceSort</option>\n        </select>\n      </div>\n      <div className=\"product\">\n        <h3 className=\"product-a\"><FontAwesomeIcon icon={faPlusCircle} /> Add Product</h3>\n      </div>\n\n      {/* btn container */}\n      <div className=\"menu\">\n        \n          {products.map((item, index) => {\n            return (\n              <button\n                key={item.id}\n                onClick={() => setValue(index)}\n                className={`btn ${index === value && 'active-btn'}`}\n              >\n                <div>{`Title: ${item.title}`}</div>\n                <div>{`Price: ${item.price}`}</div>\n              </button>\n\n\n            )\n          })}\n      </div>\n\n      {/* job info */}\n      <div className=\"content\">\n          <h3>{title}</h3>\n          <h4>{price}</h4>\n          <img src={picture} alt={\"img\"} width=\"185\" height=\"150\"/>\n          <p>{description}</p>\n\n      </div>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}